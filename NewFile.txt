import React from 'react';
import {
    Box,
    Button,
    Chip,
    IconButton,
    Paper,
    Table,
    TableBody,
    TableCell,
    TableContainer,
    TableHead,
    TableRow,
    Typography,
} from '@mui/material';
import AddIcon from '@mui/icons-material/Add';

interface TestCase {
    id: string;
    description: string;
    createdOn: string;
    stepCount: number;
    status: 'Non-automated' | 'Automated';
}

const TestCaseTable: React.FC = () => {
    const testCases: TestCase[] = [
        {
            id: 'TC-546',
            description: 'Validate the design tab UI',
            createdOn: '2025-08-25/16:21:44',
            stepCount: 2,
            status: 'Non-automated'
        },
        {
            id: 'TC-547',
            description: 'Validate the Execution tab UI',
            createdOn: '2025-08-25/16:21:44',
            stepCount: 1,
            status: 'Non-automated'
        },
        {
            id: 'TC-728',
            description: 'Verify delete functionality to delete action',
            createdOn: '2025-08-25/16:21:44',
            stepCount: 4,
            status: 'Non-automated'
        },
        {
            id: 'TC-727',
            description: 'Verify delete functionality to delete validation',
            createdOn: '2025-08-25/16:21:44',
            stepCount: 1,
            status: 'Non-automated'
        },
        {
            id: 'TC-493',
            description: 'Validate session is in-active',
            createdOn: '2025-08-25/16:21:44',
            stepCount: 3,
            status: 'Non-automated'
        }
    ];

    const handleBackClick = () => {
        console.log('Back clicked');
    };

    const handleAddToTestSuite = () => {
        console.log('Add to Test Suite clicked');
    };

    const handleRowClick = (testCase: TestCase) => {
        console.log('Row clicked:', testCase.id);
    };

    const formatStepCount = (count: number): string => {
        return count.toString().padStart(2, '0');
    };

    return (
        <Box 
            sx={{ 
                padding: 3, 
                backgroundColor: '#f5f5f5', 
                height: '100vh',
                display: 'flex',
                flexDirection: 'column'
            }}
        >
            {/* Scrollable Table Container */}
            <Paper 
                elevation={1} 
                sx={{ 
                    borderRadius: 2, 
                    overflow: 'hidden',
                    flex: 1,
                    display: 'flex',
                    flexDirection: 'column',
                    marginBottom: 2
                }}
            >
                <TableContainer 
                    sx={{ 
                        flex: 1,
                        maxHeight: 'calc(100vh - 200px)', // Adjust based on your needs
                        overflow: 'auto'
                    }}
                >
                    <Table stickyHeader>
                        <TableHead>
                            <TableRow sx={{ backgroundColor: '#e0e0e0' }}>
                                <TableCell sx={{ fontWeight: 'bold', color: '#333', backgroundColor: '#e0e0e0' }}>
                                    Test Case ID
                                </TableCell>
                                <TableCell sx={{ fontWeight: 'bold', color: '#333', backgroundColor: '#e0e0e0' }}>
                                    Test Case Description
                                </TableCell>
                                <TableCell sx={{ fontWeight: 'bold', color: '#333', backgroundColor: '#e0e0e0' }}>
                                    Created On
                                </TableCell>
                                <TableCell sx={{ fontWeight: 'bold', color: '#333', backgroundColor: '#e0e0e0' }}>
                                    Step Count
                                </TableCell>
                                <TableCell sx={{ fontWeight: 'bold', color: '#333', backgroundColor: '#e0e0e0' }}>
                                    Status
                                </TableCell>
                                <TableCell sx={{ width: 50, backgroundColor: '#e0e0e0' }} />
                            </TableRow>
                        </TableHead>
                        <TableBody>
                            {testCases.map((testCase) => (
                                <TableRow
                                    key={testCase.id}
                                    sx={{
                                        backgroundColor: 'white',
                                        cursor: 'pointer',
                                        '&:hover': {
                                            backgroundColor: '#f9f9f9',
                                        },
                                        borderBottom: '1px solid #e0e0e0'
                                    }}
                                    onClick={() => handleRowClick(testCase)}
                                >
                                    <TableCell sx={{ fontWeight: 'medium' }}>
                                        {testCase.id}
                                    </TableCell>
                                    <TableCell>
                                        {testCase.description}
                                    </TableCell>
                                    <TableCell sx={{ color: '#666' }}>
                                        {testCase.createdOn}
                                    </TableCell>
                                    <TableCell sx={{ textAlign: 'center' }}>
                                        {formatStepCount(testCase.stepCount)}
                                    </TableCell>
                                    <TableCell>
                                        <Chip
                                            label={testCase.status}
                                            sx={{
                                                backgroundColor: '#fff3cd',
                                                color: '#856404',
                                                fontSize: '0.75rem',
                                                height: 24,
                                                '& .MuiChip-label': {
                                                    px: 1.5
                                                }
                                            }}
                                            size="small"
                                        />
                                    </TableCell>
                                    <TableCell>
                                        <IconButton
                                            size="small"
                                            sx={{
                                                color: '#666',
                                                '&:hover': {
                                                    backgroundColor: '#f0f0f0'
                                                }
                                            }}
                                            onClick={(e) => {
                                                e.stopPropagation();
                                                handleRowClick(testCase);
                                            }}
                                        >
                                            <AddIcon />
                                        </IconButton>
                                    </TableCell>
                                </TableRow>
                            ))}
                        </TableBody>
                    </Table>
                </TableContainer>
            </Paper>

            {/* Fixed Bottom Button Bar */}
            <Paper
                elevation={2}
                sx={{
                    display: 'flex',
                    justifyContent: 'space-between',
                    alignItems: 'center',
                    padding: 2,
                    backgroundColor: '#f8f9fa',
                    borderRadius: 2,
                    position: 'sticky',
                    bottom: 0,
                    zIndex: 100
                }}
            >
                <Button
                    onClick={handleBackClick}
                    sx={{
                        color: '#333',
                        textTransform: 'none',
                        fontWeight: 'medium'
                    }}
                >
                    Back
                </Button>

                <Button
                    variant="contained"
                    startIcon={<AddIcon />}
                    onClick={handleAddToTestSuite}
                    sx={{
                        backgroundColor: '#6c757d',
                        color: 'white',
                        textTransform: 'none',
                        fontWeight: 'medium',
                        '&:hover': {
                            backgroundColor: '#5a6268'
                        }
                    }}
                >
                    Add to Test Suite
                </Button>
            </Paper>
        </Box>
    );
};

export default TestCaseTable;
